package com.tratumtech.edugreat.tool;


import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Set;

import javax.persistence.ManyToMany;
import javax.persistence.OrderBy;

import org.codehaus.jackson.annotate.JsonIgnoreProperties;
import org.codehaus.jettison.json.JSONException;
import org.codehaus.jettison.json.JSONObject;
import org.hibernate.annotations.BatchSize;

/**
 * Assessment generated by hbm2java
 */

@JsonIgnoreProperties(value= {"questionset"})
public class Assessment {

	private int id;
	private String assessmentName;
	private String description;
	private String category;
	private Integer qcount;
	private Integer attempts;
	private int createdby;
	private String difficulty;
	private Date createdDate;
	private Date modifiedDate;
	
	@ManyToMany(mappedBy="assessementset")
	@OrderBy("created DESC")
	@BatchSize(size=1000)
    private Set<Questions> questionset;
    
	public Assessment() {
	}

	public Assessment(int id, String assessmentName, int createdby) {
		this.id = id;
		this.assessmentName = assessmentName;
		this.createdby = createdby;
	}

	public Assessment(int id, String assessmentName, String description, String category, Integer qcount,
			Integer attempts, int createdby, String difficulty, Date createdDate, Date modifiedDate) {
		this.id = id;
		this.assessmentName = assessmentName;
		this.description = description;
		this.category = category;
		this.qcount = qcount;
		this.attempts = attempts;
		this.createdby = createdby;
		this.difficulty = difficulty;
		this.createdDate = createdDate;
		this.modifiedDate = modifiedDate;
	}
	
	public Assessment(JSONObject joAssessment){
		try {
				if(joAssessment.has("id"))
					this.id = joAssessment.getInt("id");
				
				if(joAssessment.has("assessmentName"))
					this.assessmentName = joAssessment.getString("assessmentName");
				
				if(joAssessment.has("description"))
					this.description = joAssessment.getString("description");
				
				if(joAssessment.has("category"))
					this.category = joAssessment.getString("category");
				
				if(joAssessment.has("qcount"))
					this.qcount = joAssessment.getInt("qcount");
				
				if(joAssessment.has("attempts"))
					this.attempts = joAssessment.getInt("attempts");
				
				if(joAssessment.has("createdby"))
					this.createdby = joAssessment.getInt("createdby");
						
				if(joAssessment.has("difficulty"))
					this.difficulty = joAssessment.getString("difficulty");
				
				if(joAssessment.has("createdDate")) {
					String dateStr = joAssessment.getString("createdDate");
					SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
					try {
						this.createdDate = sdf.parse(dateStr);
					} catch (ParseException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				if(joAssessment.has("modifiedDate")) {
					String dateStr = joAssessment.getString("modifiedDate");
					SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
					try {
						this.modifiedDate = sdf.parse(dateStr);
					} catch (ParseException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				
				
			} catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	}

	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getAssessmentName() {
		return this.assessmentName;
	}

	public void setAssessmentName(String assessmentName) {
		this.assessmentName = assessmentName;
	}

	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public String getCategory() {
		return this.category;
	}

	public void setCategory(String category) {
		this.category = category;
	}

	public Integer getQcount() {
		return this.qcount;
	}

	public void setQcount(Integer qcount) {
		this.qcount = qcount;
	}

	public Integer getAttempts() {
		return this.attempts;
	}

	public void setAttempts(Integer attempts) {
		this.attempts = attempts;
	}

	public int getCreatedby() {
		return this.createdby;
	}

	public void setCreatedby(int createdby) {
		this.createdby = createdby;
	}

	public String getDifficulty() {
		return this.difficulty;
	}

	public void setDifficulty(String difficulty) {
		this.difficulty = difficulty;
	}

	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	public Date getModifiedDate() {
		return this.modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		this.modifiedDate = modifiedDate;
	}
	public Set<Questions> getQuestionset() {
		return this.questionset;
	}

	public void setQuestionset(Set<Questions> questionset) {
		this.questionset = questionset;
	}
}
