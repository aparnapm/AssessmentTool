package com.tratumtech.edugreat.tool;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.codehaus.jettison.json.JSONException;
import org.codehaus.jettison.json.JSONObject;

/**
 * Enrollment generated by hbm2java
 */
public class Enrollment {

	private int id;
	private int assessmentId;
	private int studentId;
	private Date validFrom;
	private Date validUntil;
	private boolean stat;
	private Integer attempts;
	private Integer score;

	public Enrollment() {
	}

	public Enrollment(int id, int assessmentId, int studentId, boolean stat,int attempts) {
		this.id = id;
		this.assessmentId = assessmentId;
		this.studentId = studentId;
		this.stat = stat;
		this.attempts = attempts;
	}

	public Enrollment(int id, int assessmentId, int studentId, Date validFrom, Date validUntil, boolean stat,  Integer attempts, Integer score) {
		this.id = id;
		this.assessmentId = assessmentId;
		this.studentId = studentId;
		this.validFrom = validFrom;
		this.validUntil = validUntil;
		this.stat = stat;
		this.attempts = attempts;
		this.score = score;
	}
	
	public Enrollment(JSONObject joEnrollment){
		try {
				if(joEnrollment.has("id"))
					this.id = joEnrollment.getInt("id");
				
				if(joEnrollment.has("assessmentId"))
					this.assessmentId= joEnrollment.getInt("assessmentId");
				
				if(joEnrollment.has("studentId"))
					this.studentId= joEnrollment.getInt("studentId");
				
				
				if(joEnrollment.has("validFrom")) {
					String dateStr = joEnrollment.getString("validFrom");
					SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
					try {
						this.validFrom = sdf.parse(dateStr);
					} catch (ParseException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				if(joEnrollment.has("ValidUntil")) {
					String dateStr = joEnrollment.getString("validUntil");
					SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
					try {
						this.validUntil= sdf.parse(dateStr);
					} catch (ParseException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				if(joEnrollment.has("stat"))
					this.stat= joEnrollment.getBoolean("stat");
				
				if(joEnrollment.has("attempts"))
					this.attempts = joEnrollment.getInt("attempts");
				
				if(joEnrollment.has("score"))
					this.score = joEnrollment.getInt("score");
				
				
			} catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	}

	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public int getAssessmentId() {
		return this.assessmentId;
	}

	public void setAssessmentId(int assessmentId) {
		this.assessmentId = assessmentId;
	}

	public int getStudentId() {
		return this.studentId;
	}

	public void setStudentId(int studentId) {
		this.studentId = studentId;
	}

	public Date getValidFrom() {
		return this.validFrom;
	}

	public void setValidFrom(Date validFrom) {
		this.validFrom = validFrom;
	}

	public Date getValidUntil() {
		return this.validUntil;
	}

	public void setValidUntil(Date validUntil) {
		this.validUntil = validUntil;
	}

	public boolean isStat() {
		return this.stat;
	}

	public void setStat(boolean stat) {
		this.stat = stat;
	}

	public Integer getAttempts() {
		return this.attempts;
	}

	public void setAttempts(Integer attempts) {
		this.attempts = attempts;
	}

	public Integer getScore() {
		return this.score;
	}

	public void setScore(Integer score) {
		this.score = score;
	}

}
